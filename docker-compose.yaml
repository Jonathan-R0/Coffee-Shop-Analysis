services:
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10

  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    restart: on-failure
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      gateway:
        condition: service_started
    volumes:
      - ./client/config.ini:/config.ini
      - ./data/transaction_items_202307.csv:/transaction_items_202307.csv

  gateway:
    build:
      context: .
      dockerfile: ./server/gateway/Dockerfile
    container_name: gateway
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_year_1:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_year_1
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=year
      - INPUT_QUEUE=raw_data
      - OUTPUT_QUEUE=year_filtered
      - FILTER_YEARS=2024,2025
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_year_2:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_year_2
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=year
      - INPUT_QUEUE=raw_data
      - OUTPUT_QUEUE=year_filtered
      - FILTER_YEARS=2024,2025
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_year_3:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_year_3
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=year
      - INPUT_QUEUE=raw_data
      - OUTPUT_QUEUE=year_filtered
      - FILTER_YEARS=2024,2025
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_year_4:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_year_4
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=year
      - INPUT_QUEUE=raw_data
      - OUTPUT_QUEUE=year_filtered
      - FILTER_YEARS=2024,2025
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_year_5:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_year_5
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=year
      - INPUT_QUEUE=raw_data
      - OUTPUT_QUEUE=year_filtered
      - FILTER_YEARS=2024,2025
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_year_6:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_year_6
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=year
      - INPUT_QUEUE=raw_data
      - OUTPUT_QUEUE=year_filtered
      - FILTER_YEARS=2024,2025
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_year_7:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_year_7
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=year
      - INPUT_QUEUE=raw_data
      - OUTPUT_QUEUE=year_filtered
      - FILTER_YEARS=2024,2025
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_year_8:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_year_8
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=year
      - INPUT_QUEUE=raw_data
      - OUTPUT_QUEUE=year_filtered
      - FILTER_YEARS=2024,2025
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_year_9:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_year_9
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=year
      - INPUT_QUEUE=raw_data
      - OUTPUT_QUEUE=year_filtered
      - FILTER_YEARS=2024,2025
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_year_10:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_year_10
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=year
      - INPUT_QUEUE=raw_data
      - OUTPUT_QUEUE=year_filtered
      - FILTER_YEARS=2024,2025
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_hour_1:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_hour_1
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=hour
      - INPUT_QUEUE=year_filtered
      - OUTPUT_QUEUE=hour_filtered
      - FILTER_HOURS=06:00-22:59
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_hour_2:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_hour_2
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=hour
      - INPUT_QUEUE=year_filtered
      - OUTPUT_QUEUE=hour_filtered
      - FILTER_HOURS=06:00-22:59
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_hour_3:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_hour_3
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=hour
      - INPUT_QUEUE=year_filtered
      - OUTPUT_QUEUE=hour_filtered
      - FILTER_HOURS=06:00-22:59
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_hour_4:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_hour_4
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=hour
      - INPUT_QUEUE=year_filtered
      - OUTPUT_QUEUE=hour_filtered
      - FILTER_HOURS=06:00-22:59
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_hour_5:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_hour_5
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=hour
      - INPUT_QUEUE=year_filtered
      - OUTPUT_QUEUE=hour_filtered
      - FILTER_HOURS=06:00-22:59
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_hour_6:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_hour_6
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=hour
      - INPUT_QUEUE=year_filtered
      - OUTPUT_QUEUE=hour_filtered
      - FILTER_HOURS=06:00-22:59
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_hour_7:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_hour_7
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=hour
      - INPUT_QUEUE=year_filtered
      - OUTPUT_QUEUE=hour_filtered
      - FILTER_HOURS=06:00-22:59
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_hour_8:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_hour_8
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=hour
      - INPUT_QUEUE=year_filtered
      - OUTPUT_QUEUE=hour_filtered
      - FILTER_HOURS=06:00-22:59
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_hour_9:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_hour_9
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=hour
      - INPUT_QUEUE=year_filtered
      - OUTPUT_QUEUE=hour_filtered
      - FILTER_HOURS=06:00-22:59
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_hour_10:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_hour_10
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=hour
      - INPUT_QUEUE=year_filtered
      - OUTPUT_QUEUE=hour_filtered
      - FILTER_HOURS=06:00-22:59
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_amount_1:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_amount_1
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=amount
      - INPUT_QUEUE=hour_filtered
      - OUTPUT_QUEUE=final_data
      - MIN_AMOUNT=75
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_amount_2:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_amount_2
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=amount
      - INPUT_QUEUE=hour_filtered
      - OUTPUT_QUEUE=final_data
      - MIN_AMOUNT=75
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_amount_3:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_amount_3
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=amount
      - INPUT_QUEUE=hour_filtered
      - OUTPUT_QUEUE=final_data
      - MIN_AMOUNT=75
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_amount_4:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_amount_4
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=amount
      - INPUT_QUEUE=hour_filtered
      - OUTPUT_QUEUE=final_data
      - MIN_AMOUNT=75
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_amount_5:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_amount_5
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=amount
      - INPUT_QUEUE=hour_filtered
      - OUTPUT_QUEUE=final_data
      - MIN_AMOUNT=75
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_amount_6:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_amount_6
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=amount
      - INPUT_QUEUE=hour_filtered
      - OUTPUT_QUEUE=final_data
      - MIN_AMOUNT=75
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_amount_7:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_amount_7
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=amount
      - INPUT_QUEUE=hour_filtered
      - OUTPUT_QUEUE=final_data
      - MIN_AMOUNT=75
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_amount_8:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_amount_8
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=amount
      - INPUT_QUEUE=hour_filtered
      - OUTPUT_QUEUE=final_data
      - MIN_AMOUNT=75
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_amount_9:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_amount_9
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=amount
      - INPUT_QUEUE=hour_filtered
      - OUTPUT_QUEUE=final_data
      - MIN_AMOUNT=75
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_amount_10:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_amount_10
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=amount
      - INPUT_QUEUE=hour_filtered
      - OUTPUT_QUEUE=final_data
      - MIN_AMOUNT=75
    volumes:
      - ./server/config.ini:/app/config.ini

  report_generator:
    build:
      context: .
      dockerfile: ./server/report_generator/Dockerfile
    container_name: report_generator
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - INPUT_QUEUE=final_data
    volumes:
      - ./server/config.ini:/app/config.ini
      - ./reports:/app/reports

