services:
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    restart: on-failure
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      gateway:
        condition: service_started
    volumes:
      - ./client/config.ini:/config.ini
      - ./data/transaction_items:/data/transaction_items
      - ./data/users:/data/users
      - ./data/stores:/data/stores
      - ./data/menu_items:/data/menu_items
      - ./data/payment_methods:/data/payment_methods
      - ./data/vouchers:/data/vouchers

      - ./data/transactions:/data/transactions

      - ./data/transactions_test:/data/transactions_test
      - ./reports:/reports

  gateway:
    build:
      context: .
      dockerfile: ./server/gateway/Dockerfile
    container_name: gateway
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - OUTPUT_QUEUE=raw_data
      - REPORTS_EXCHANGE=reports_exchange
      - STORE_EXCHANGE=join.exchange
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_year_1:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_year_1
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=year
      - INPUT_QUEUE=raw_data
      - OUTPUT_Q1=year_filtered
      - TOTAL_YEAR_FILTERS=3
      - FILTER_YEARS=2024,2025
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_year_2:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_year_2
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=year
      - INPUT_QUEUE=raw_data
      - OUTPUT_Q1=year_filtered
      - TOTAL_YEAR_FILTERS=3
      - FILTER_YEARS=2024,2025
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_year_3:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_year_3
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=year
      - INPUT_QUEUE=raw_data
      - OUTPUT_Q1=year_filtered
      - TOTAL_YEAR_FILTERS=3
      - FILTER_YEARS=2024,2025
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_hour_1:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_hour_1
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=hour
      - INPUT_QUEUE=year_filtered
      - OUTPUT_Q1=hour_filtered
      - TOTAL_HOUR_FILTERS=3
      - FILTER_HOURS=06:00-22:59
      - OUTPUT_Q3=groupby.join.exchange
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_hour_2:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_hour_2
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=hour
      - INPUT_QUEUE=year_filtered
      - OUTPUT_Q1=hour_filtered
      - TOTAL_HOUR_FILTERS=3
      - FILTER_HOURS=06:00-22:59
      - OUTPUT_Q3=groupby.join.exchange
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_hour_3:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_hour_3
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=hour
      - INPUT_QUEUE=year_filtered
      - OUTPUT_Q1=hour_filtered
      - TOTAL_HOUR_FILTERS=3
      - FILTER_HOURS=06:00-22:59
      - OUTPUT_Q3=groupby.join.exchange
    volumes:
      - ./server/config.ini:/app/config.ini

  groupby_semester_1:
    build:
      context: .
      dockerfile: ./server/groupby/Dockerfile
    container_name: groupby_semester_1
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - SEMESTER=1
      - INPUT_Q3=groupby.join.exchange
      - TOTAL_GROUPBY_NODES=2
      - JOIN_EXCHANGE=join.exchange
    volumes:
      - ./server/config.ini:/app/config.ini

  groupby_semester_2:
    build:
      context: .
      dockerfile: ./server/groupby/Dockerfile
    container_name: groupby_semester_2
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - SEMESTER=2
      - INPUT_Q3=groupby.join.exchange
      - TOTAL_GROUPBY_NODES=2
      - JOIN_EXCHANGE=join.exchange
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_amount_1:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_amount_1
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=amount
      - INPUT_QUEUE=hour_filtered
      - OUTPUT_Q1=report.exchange
      - TOTAL_AMOUNT_FILTERS=3
      - MIN_AMOUNT=75
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_amount_2:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_amount_2
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=amount
      - INPUT_QUEUE=hour_filtered
      - OUTPUT_Q1=report.exchange
      - TOTAL_AMOUNT_FILTERS=3
      - MIN_AMOUNT=75
    volumes:
      - ./server/config.ini:/app/config.ini

  filter_amount_3:
    build:
      context: .
      dockerfile: ./server/filter/Dockerfile
    container_name: filter_amount_3
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - FILTER_MODE=amount
      - INPUT_QUEUE=hour_filtered
      - OUTPUT_Q1=report.exchange
      - TOTAL_AMOUNT_FILTERS=3
      - MIN_AMOUNT=75
    volumes:
      - ./server/config.ini:/app/config.ini

  report_generator:
    build:
      context: .
      dockerfile: ./server/report_generator/Dockerfile
    container_name: report_generator
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - INPUT_EXCHANGE=report.exchange
      - REPORTS_EXCHANGE=reports_exchange
    volumes:
      - ./server/config.ini:/app/config.ini
      - ./reports:/app/reports

  join_node:
    build:
      context: .
      dockerfile: ./server/join/Dockerfile
    container_name: join_node
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - INPUT_EXCHANGE=join.exchange
      - OUTPUT_EXCHANGE=report.exchange
    volumes:
      - ./server/config.ini:/app/config.ini

